
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author stephensmac
 */
public class BballUI extends javax.swing.JFrame {

    Player player1 = new Player();
    Player player2 = new Player();
    Player player3 = new Player();
    Player player4 = new Player();
    Player player5 = new Player();
    Player playerOpp = new Player();
    
    //Flags for button combos
    boolean flag1 = false;
    boolean flag2 = false;
    boolean flag3 = false;
    boolean flag4 = false;
    boolean flag5 = false;
    boolean flagOpp = false;

    //Team Stats
    int teamScore;
    int teamftMake;
    int teamftMiss;
    int teamtwoMake;
    int teamtwoMiss;
    int teamthreeMake;
    int teamthreeMiss;
    int teamoffRebound;
    int teamdefRebound;
    int teamAssist;
    int teamTurnover;
    int teamSteal;
    int teamBlock;
    int teamFoul;
    
    /**
     * Creates new form BballUI
     */
    public BballUI() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        player1But = new javax.swing.JButton();
        player2But = new javax.swing.JButton();
        player3But = new javax.swing.JButton();
        player4But = new javax.swing.JButton();
        player5But = new javax.swing.JButton();
        oppBut = new javax.swing.JButton();
        RBSubtract = new javax.swing.JRadioButton();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ftMakeButton = new javax.swing.JButton();
        twoMakeButton = new javax.swing.JButton();
        threeMakeButton = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ftMissButton = new javax.swing.JButton();
        twoMissButton = new javax.swing.JButton();
        threeMissButton = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        offReboundButton = new javax.swing.JButton();
        assistButton = new javax.swing.JButton();
        turnoverButton = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        defReboundButton = new javax.swing.JButton();
        stealButton = new javax.swing.JButton();
        blockButton = new javax.swing.JButton();
        foulButton = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayList = new javax.swing.JList();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        statTable = new javax.swing.JTable();
        tableRefreshButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        menuEditNames = new javax.swing.JMenu();
        menuNameEdit1 = new javax.swing.JMenuItem();
        menuNameEdit2 = new javax.swing.JMenuItem();
        menuNameEdit3 = new javax.swing.JMenuItem();
        menuNameEdit4 = new javax.swing.JMenuItem();
        menuNameEdit5 = new javax.swing.JMenuItem();
        menuNameEditOpp = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel5.setBackground(new java.awt.Color(153, 255, 255));

        player1But.setText("Player 1");
        player1But.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player1ButActionPerformed(evt);
            }
        });

        player2But.setText("Player 2");
        player2But.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player2ButActionPerformed(evt);
            }
        });

        player3But.setText("Player 3");
        player3But.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player3ButActionPerformed(evt);
            }
        });

        player4But.setText("Player 4");
        player4But.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player4ButActionPerformed(evt);
            }
        });

        player5But.setText("Player 5");
        player5But.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player5ButActionPerformed(evt);
            }
        });

        oppBut.setText("Opponent");
        oppBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oppButActionPerformed(evt);
            }
        });

        RBSubtract.setText("Subtract");
        RBSubtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBSubtractActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(player4But, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(player5But, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(player1But, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(player2But, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(player3But, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RBSubtract)
                    .addComponent(oppBut, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(player3But, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(player2But, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(player1But, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(player4But, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(player5But, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                        .addContainerGap(62, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(oppBut, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RBSubtract)
                        .addGap(26, 26, 26))))
        );

        jPanel13.setBackground(new java.awt.Color(51, 51, 51));
        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel14.setBackground(new java.awt.Color(153, 255, 255));

        jPanel4.setBackground(new java.awt.Color(102, 255, 102));

        jLabel1.setText("Make");

        ftMakeButton.setText("FT");
        ftMakeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftMakeButtonActionPerformed(evt);
            }
        });

        twoMakeButton.setText("2");
        twoMakeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoMakeButtonActionPerformed(evt);
            }
        });

        threeMakeButton.setText("3");
        threeMakeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeMakeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ftMakeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel1))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(twoMakeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(threeMakeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(ftMakeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(twoMakeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(threeMakeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel16.setBackground(new java.awt.Color(255, 51, 51));

        jLabel2.setText("Miss");

        ftMissButton.setText("FT");
        ftMissButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftMissButtonActionPerformed(evt);
            }
        });

        twoMissButton.setText("2");
        twoMissButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoMissButtonActionPerformed(evt);
            }
        });

        threeMissButton.setText("3");
        threeMissButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeMissButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel2))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(twoMissButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(threeMissButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ftMissButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addComponent(ftMissButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(twoMissButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(threeMissButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel3.setText("Offense");

        offReboundButton.setText("Rebound");
        offReboundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                offReboundButtonActionPerformed(evt);
            }
        });

        assistButton.setText("Assist");
        assistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assistButtonActionPerformed(evt);
            }
        });

        turnoverButton.setText("Turnover");
        turnoverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turnoverButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jLabel3))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(offReboundButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(assistButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(turnoverButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(offReboundButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(turnoverButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assistButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel4.setText("Defense");

        defReboundButton.setText("Rebound");
        defReboundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defReboundButtonActionPerformed(evt);
            }
        });

        stealButton.setText("Steal");
        stealButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stealButtonActionPerformed(evt);
            }
        });

        blockButton.setText("Block");
        blockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLabel4))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(defReboundButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stealButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(blockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(blockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defReboundButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stealButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        foulButton.setText("Foul");
        foulButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foulButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(foulButton, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(foulButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        displayList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(displayList);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("User Interface", jPanel9);

        statTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(statTable);

        tableRefreshButton.setText("Refresh");
        tableRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 864, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tableRefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tableRefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Stat Sheet", jPanel17);

        jMenu1.setText("Bball");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        menuEditNames.setText("Edit Player Names");

        menuNameEdit1.setText("Player 1");
        menuNameEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNameEdit1ActionPerformed(evt);
            }
        });
        menuEditNames.add(menuNameEdit1);

        menuNameEdit2.setText("Player 2");
        menuNameEdit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNameEdit2ActionPerformed(evt);
            }
        });
        menuEditNames.add(menuNameEdit2);

        menuNameEdit3.setText("Player 3");
        menuNameEdit3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNameEdit3ActionPerformed(evt);
            }
        });
        menuEditNames.add(menuNameEdit3);

        menuNameEdit4.setText("Player4");
        menuNameEdit4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNameEdit4ActionPerformed(evt);
            }
        });
        menuEditNames.add(menuNameEdit4);

        menuNameEdit5.setText("Player 5");
        menuNameEdit5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNameEdit5ActionPerformed(evt);
            }
        });
        menuEditNames.add(menuNameEdit5);

        menuNameEditOpp.setText("Opponent");
        menuNameEditOpp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNameEditOppActionPerformed(evt);
            }
        });
        menuEditNames.add(menuNameEditOpp);

        jMenu2.add(menuEditNames);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    DefaultListModel mod = new DefaultListModel();
    //Register Button Press for player 1
    private void player1ButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player1ButActionPerformed
        // TODO add your handling code here:
        resetFlags();
        flag1 = true;
    }//GEN-LAST:event_player1ButActionPerformed
    //Register Button Press for player 2
    private void player2ButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player2ButActionPerformed
        // TODO add your handling code here:
        resetFlags();
        flag2 = true;
    }//GEN-LAST:event_player2ButActionPerformed
    //Register Button Press for player 3
    private void player3ButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player3ButActionPerformed
        // TODO add your handling code here:
        resetFlags();
        flag3 = true;
    }//GEN-LAST:event_player3ButActionPerformed
    //Register Button Press for player 4
    private void player4ButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player4ButActionPerformed
        // TODO add your handling code here:
        resetFlags();
        flag4 = true;
    }//GEN-LAST:event_player4ButActionPerformed
    //Register Button Press for player 5
    private void player5ButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player5ButActionPerformed
        // TODO add your handling code here:
        resetFlags();
        flag5 = true;
    }//GEN-LAST:event_player5ButActionPerformed
    //Register Button Press for playerOpp
    private void oppButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oppButActionPerformed
        // TODO add your handling code here:
        resetFlags();
        flagOpp = true;
    }//GEN-LAST:event_oppButActionPerformed

    private void RBSubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBSubtractActionPerformed
        // PlaceHolder
    }//GEN-LAST:event_RBSubtractActionPerformed

    private void ftMakeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftMakeButtonActionPerformed
        displayList.setModel(mod);
        // FreeThrow Make Actions and Logs
        if (RBSubtract.isSelected()){
            if (flag1 == true){
                player1.subftMake();
                mod.addElement("sub player1 " + "FT Make, Points: " + player1.gettotalPoints());
            }else if(flag2 == true){
                player2.subftMake();
                mod.addElement("sub player2 " + "FT Make, Points: " + player2.gettotalPoints());
            }else if(flag3 == true){
                player3.subftMake();
                mod.addElement("sub player3 " + "FT Make, Points: " + player3.gettotalPoints());
            }else if(flag4 == true){
                player4.subftMake();
                mod.addElement("sub player4 " + "FT Make, Points: " + player4.gettotalPoints());
            }else if(flag5 == true){
                player5.subftMake();
                mod.addElement("sub player5 " + "FT Make, Points: " + player5.gettotalPoints());
            }else if(flagOpp == true){
                playerOpp.subftMake();
                mod.addElement("sub Opponent " + "FT Make, Points: " + playerOpp.gettotalPoints());
            }
        }else{
            if (flag1 == true){
                player1.addftMake();
                mod.addElement("player1 " + "FT Make, Points: " + player1.gettotalPoints());
            }else if(flag2 == true){
                player2.addftMake();
                mod.addElement("player2 " + "FT Make, Points: " + player2.gettotalPoints());
            }else if(flag3 == true){
                player3.addftMake();
                mod.addElement("player3 " + "FT Make, Points: " + player3.gettotalPoints());
            }else if(flag4 == true){
                player4.addftMake();
                mod.addElement("player4 " + "FT Make, Points: " + player4.gettotalPoints());
            }else if(flag5 == true){
                player5.addftMake();
                mod.addElement("player5 " + "FT Make, Points: " + player5.gettotalPoints());
            }else if(flagOpp == true){
                playerOpp.addftMake();
                mod.addElement("Opponent " + "FT Make, Points: " + playerOpp.gettotalPoints());
            }
        }
    }//GEN-LAST:event_ftMakeButtonActionPerformed

    private void ftMissButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftMissButtonActionPerformed
        displayList.setModel(mod);
        // FreeThrow Miss Actions and Logs
        if (RBSubtract.isSelected()){
            if (flag1 == true){
                player1.subftMiss();
                mod.addElement("sub player1 " + "FT Miss, Points: " + player1.gettotalPoints());
            }else if(flag2 == true){
                player2.subftMiss();
                mod.addElement("sub player2 " + "FT Miss, Points: " + player2.gettotalPoints());
            }else if(flag3 == true){
                player3.subftMiss();
                mod.addElement("sub player3 " + "FT Miss, Points: " + player3.gettotalPoints());
            }else if(flag4 == true){
                player4.subftMiss();
                mod.addElement("sub player4 " + "FT Miss, Points: " + player4.gettotalPoints());
            }else if(flag5 == true){
                player5.subftMiss();
                mod.addElement("sub player5 " + "FT Miss, Points: " + player5.gettotalPoints());
            }else if(flagOpp == true){
                playerOpp.subftMiss();
                mod.addElement("sub Opponent " + "FT Miss, Points: " + playerOpp.gettotalPoints());
            }
        }else{
            if (flag1 == true){
                player1.addftMiss();
                mod.addElement("player1 " + "FT Miss, Points: " + player1.gettotalPoints());
            }else if(flag2 == true){
                player2.addftMiss();
                mod.addElement("player2 " + "FT Miss, Points: " + player2.gettotalPoints());
            }else if(flag3 == true){
                player3.addftMiss();
                mod.addElement("player3 " + "FT Miss, Points: " + player3.gettotalPoints());
            }else if(flag4 == true){
                player4.addftMiss();
                mod.addElement("player4 " + "FT Miss, Points: " + player4.gettotalPoints());
            }else if(flag5 == true){
                player5.addftMiss();
                mod.addElement("player5 " + "FT Miss, Points: " + player5.gettotalPoints());
            }else if(flagOpp == true){
                playerOpp.addftMiss();
                mod.addElement("Opponent " + "FT Miss, Points: " + playerOpp.gettotalPoints());
            }
        }
    }//GEN-LAST:event_ftMissButtonActionPerformed

    private void twoMakeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoMakeButtonActionPerformed
        displayList.setModel(mod);
        // 2pt Make Actions and Logs
        if (RBSubtract.isSelected()){
            if (flag1 == true){
                player1.subtwoMake();
                mod.addElement("sub player1 " + "2pt Make, Points: " + player1.gettotalPoints());
            }else if(flag2 == true){
                player2.subtwoMake();
                mod.addElement("sub player2 " + "2pt Make, Points: " + player2.gettotalPoints());
            }else if(flag3 == true){
                player3.subtwoMake();
                mod.addElement("sub player3 " + "2pt Make, Points: " + player3.gettotalPoints());
            }else if(flag4 == true){
                player4.subtwoMake();
                mod.addElement("sub player4 " + "2pt Make, Points: " + player4.gettotalPoints());
            }else if(flag5 == true){
                player5.subtwoMake();
                mod.addElement("sub player5 " + "2pt Make, Points: " + player5.gettotalPoints());
            }else if(flagOpp == true){
                playerOpp.subtwoMake();
                mod.addElement("sub Opponent " + "2pt Make, Points: " + playerOpp.gettotalPoints());
            }
        }else{
            if (flag1 == true){
                player1.addtwoMake();
                mod.addElement("player1 " + "2pt Make, Points: " + player1.gettotalPoints());
            }else if(flag2 == true){
                player2.addtwoMake();
                mod.addElement("player2 " + "2pt Make, Points: " + player2.gettotalPoints());
            }else if(flag3 == true){
                player3.addtwoMake();
                mod.addElement("player3 " + "2pt Make, Points: " + player3.gettotalPoints());
            }else if(flag4 == true){
                player4.addtwoMake();
                mod.addElement("player4 " + "2pt Make, Points: " + player4.gettotalPoints());
            }else if(flag5 == true){
                player5.addtwoMake();
                mod.addElement("player5 " + "2pt Make, Points: " + player5.gettotalPoints());
            }else if(flagOpp == true){
                playerOpp.addtwoMake();
                mod.addElement("Opponent " + "2pt Make, Points: " + playerOpp.gettotalPoints());
            }
        }
    }//GEN-LAST:event_twoMakeButtonActionPerformed

    private void twoMissButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoMissButtonActionPerformed
        displayList.setModel(mod);
        // TODO add your handling code here:
        if (RBSubtract.isSelected()){
            if (flag1 == true){
                player1.subtwoMiss();
                mod.addElement("sub player1 " + "2pt Miss, Points: " + player1.gettotalPoints());
            }else if(flag2 == true){
                player2.subtwoMiss();
                mod.addElement("sub player2 " + "2pt Miss, Points: " + player2.gettotalPoints());
            }else if(flag3 == true){
                player3.subtwoMiss();
                mod.addElement("sub player3 " + "2pt Miss, Points: " + player3.gettotalPoints());
            }else if(flag4 == true){
                player4.subtwoMiss();
                mod.addElement("sub player4 " + "2pt Miss, Points: " + player4.gettotalPoints());
            }else if(flag5 == true){
                player5.subtwoMiss();
                mod.addElement("sub player5 " + "2pt Miss, Points: " + player5.gettotalPoints());
            }else if(flagOpp == true){
                playerOpp.subtwoMiss();
                mod.addElement("sub Opponent " + "2pt Miss, Points: " + playerOpp.gettotalPoints());
            }
        }else{
            if (flag1 == true){
                player1.addtwoMiss();
                mod.addElement("player1 " + "2pt Miss, Points: " + player1.gettotalPoints());
            }else if(flag2 == true){
                player2.addtwoMiss();
                mod.addElement("player2 " + "2pt Miss, Points: " + player2.gettotalPoints());
            }else if(flag3 == true){
                player3.addtwoMiss();
                mod.addElement("player3 " + "2pt Miss, Points: " + player3.gettotalPoints());
            }else if(flag4 == true){
                player4.addtwoMiss();
                mod.addElement("player4 " + "2pt Miss, Points: " + player4.gettotalPoints());
            }else if(flag5 == true){
                player5.addtwoMiss();
                mod.addElement("player5 " + "2pt Miss, Points: " + player5.gettotalPoints());
            }else if(flagOpp == true){
                playerOpp.addtwoMiss();
                mod.addElement("Opponent " + "2pt Miss, Points: " + playerOpp.gettotalPoints());
            }
        }
    }//GEN-LAST:event_twoMissButtonActionPerformed

    private void threeMakeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeMakeButtonActionPerformed
        displayList.setModel(mod);
        // 3pt Make Actions and Logs
        if (RBSubtract.isSelected()){
            if (flag1 == true){
                player1.subthreeMake();
                mod.addElement("sub player1 " + " 3pt Make, Points: " + player1.gettotalPoints());
            }else if(flag2 == true){
                player2.subthreeMake();
                mod.addElement("sub player2 " + " 3pt Make, Points: " + player2.gettotalPoints());
            }else if(flag3 == true){
                player3.subthreeMake();
                mod.addElement("sub player3 " + " 3pt Make, Points: " + player3.gettotalPoints());
            }else if(flag4 == true){
                player4.subthreeMake();
                mod.addElement("sub player4 " + " 3pt Make, Points: " + player4.gettotalPoints());
            }else if(flag5 == true){
                player5.subthreeMake();
                mod.addElement("sub player5 " + " 3pt Make, Points: " + player5.gettotalPoints());
            }else if(flagOpp == true){
                playerOpp.subthreeMake();
                mod.addElement("sub Opponent " + " 3pt Make, Points: " + playerOpp.gettotalPoints());
            }
        }else{
            if (flag1 == true){
                player1.addthreeMake();
                mod.addElement("player1 " + " 3pt Make, Points: " + player1.gettotalPoints());
            }else if(flag2 == true){
                player2.addthreeMake();
                mod.addElement("player2 " + " 3pt Make, Points: " + player2.gettotalPoints());
            }else if(flag3 == true){
                player3.addthreeMake();
                mod.addElement("player3 " + " 3pt Make, Points: " + player3.gettotalPoints());
            }else if(flag4 == true){
                player4.addthreeMake();
                mod.addElement("player4 " + " 3pt Make, Points: " + player4.gettotalPoints());
            }else if(flag5 == true){
                player5.addthreeMake();
                mod.addElement("player5 " + " 3pt Make, Points: " + player5.gettotalPoints());
            }else if(flagOpp == true){
                playerOpp.addthreeMake();
                mod.addElement("Opponent " + " 3pt Make, Points: " + playerOpp.gettotalPoints());
            }
        }
    }//GEN-LAST:event_threeMakeButtonActionPerformed

    private void threeMissButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeMissButtonActionPerformed
        displayList.setModel(mod);
        // 3pt Miss Actions and Logs
        if (RBSubtract.isSelected()){
            if (flag1 == true){
                player1.subthreeMiss();
                mod.addElement("sub player1 " + " 3pt Miss, Points: " +  player1.gettotalPoints());
            }else if(flag2 == true){
                player2.subthreeMiss();
                mod.addElement("sub player2 " + " 3pt Miss, Points: " +  player2.gettotalPoints());
            }else if(flag3 == true){
                player3.subthreeMiss();
                mod.addElement("sub player3 " + " 3pt Miss, Points: " +  player3.gettotalPoints());
            }else if(flag4 == true){
                player4.subthreeMiss();
                mod.addElement("sub player4 " + " 3pt Miss, Points: " +  player4.gettotalPoints());
            }else if(flag5 == true){
                player5.subthreeMiss();
                mod.addElement("sub player5 " + " 3pt Miss, Points: " +  player5.gettotalPoints());
            }else if(flagOpp == true){
                playerOpp.subthreeMiss();
                mod.addElement("sub Opponent " + " 3pt Miss, Points: " +  playerOpp.gettotalPoints());
            }
        }else{
            if (flag1 == true){
                player1.addthreeMiss();
                mod.addElement("player1 " + " 3pt Miss, Points: " +  player1.gettotalPoints());
            }else if(flag2 == true){
                player2.addthreeMiss();
                mod.addElement("player2 " + " 3pt Miss, Points: " +  player2.gettotalPoints());
            }else if(flag3 == true){
                player3.addthreeMiss();
                mod.addElement("player3 " + " 3pt Miss, Points: " +  player3.gettotalPoints());
            }else if(flag4 == true){
                player4.addthreeMiss();
                mod.addElement("player4 " + " 3pt Miss, Points: " +  player4.gettotalPoints());
            }else if(flag5 == true){
                player5.addthreeMiss();
                mod.addElement("player5 " + " 3pt Miss, Points: " +  player5.gettotalPoints());
            }else if(flagOpp == true){
                playerOpp.addthreeMiss();
                mod.addElement("Opponent " + " 3pt Miss, Points: " +  playerOpp.gettotalPoints());
            }
        }
    }//GEN-LAST:event_threeMissButtonActionPerformed

    private void offReboundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offReboundButtonActionPerformed
        displayList.setModel(mod);
        // Offensive Rebound Actions and Logs
        if (RBSubtract.isSelected()){
            if (flag1 == true){
                player1.suboffRebound();
                mod.addElement("sub player1 " + "Off Reb " +  player1.getoffRebound());
            }else if(flag2 == true){
                player2.suboffRebound();
                mod.addElement("sub player2 " + "Off Reb " +  player2.getoffRebound());
            }else if(flag3 == true){
                player3.suboffRebound();
                mod.addElement("sub player3 " + "Off Reb " +  player3.getoffRebound());
            }else if(flag4 == true){
                player4.suboffRebound();
                mod.addElement("sub player4 " + "Off Reb " +  player4.getoffRebound());
            }else if(flag5 == true){
                player5.suboffRebound();
                mod.addElement("sub player5 " + "Off Reb " +  player5.getoffRebound());
            }else if(flagOpp == true){
                playerOpp.suboffRebound();
                mod.addElement("sub Opponent " + "Off Reb " +  playerOpp.getoffRebound());
            }
        }else{
            if (flag1 == true){
                player1.addoffRebound();
                mod.addElement("player1 " + "Off Reb " +  player1.getoffRebound());
            }else if(flag2 == true){
                player2.addoffRebound();
                mod.addElement("player2 " + "Off Reb " +  player2.getoffRebound());
            }else if(flag3 == true){
                player3.addoffRebound();
                mod.addElement("player3 " + "Off Reb " +  player3.getoffRebound());
            }else if(flag4 == true){
                player4.addoffRebound();
                mod.addElement("player4 " + "Off Reb " +  player4.getoffRebound());
            }else if(flag5 == true){
                player5.addoffRebound();
                mod.addElement("player5 " + "Off Reb " +  player5.getoffRebound());
            }else if(flagOpp == true){
                playerOpp.addoffRebound();
                mod.addElement("Opponent " + "Off Reb " +  playerOpp.getoffRebound());
            }
        }                            
    }//GEN-LAST:event_offReboundButtonActionPerformed

    private void defReboundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defReboundButtonActionPerformed
        displayList.setModel(mod);
        // Defensive Rebound Actions and Logs
         if (RBSubtract.isSelected()){
            if (flag1 == true){
                player1.subdefRebound();
                mod.addElement("sub player1 " + " Def Rebound " +  player1.getdefRebound());
            }else if(flag2 == true){
                player2.subdefRebound();
                mod.addElement("sub player2 " + " Def Rebound " +  player2.getdefRebound());
            }else if(flag3 == true){
                player3.subdefRebound();
                mod.addElement("sub player3 " + " Def Rebound " +  player3.getdefRebound());
            }else if(flag4 == true){
                player4.subdefRebound();
                mod.addElement("sub player4 " + " Def Rebound " +  player4.getdefRebound());
            }else if(flag5 == true){
                player5.subdefRebound();
                mod.addElement("sub player5 " + " Def Rebound " +  player5.getdefRebound());
            }else if(flagOpp == true){
                playerOpp.subdefRebound();
                mod.addElement("sub Opponent " + " Def Rebound " +  playerOpp.getdefRebound());
            }
        }else{
            if (flag1 == true){
                player1.adddefRebound();
                mod.addElement("player1 " + " Def Rebound " +  player1.getdefRebound());
            }else if(flag2 == true){
                player2.adddefRebound();
                mod.addElement("player2 " + " Def Rebound " +  player2.getdefRebound());
            }else if(flag3 == true){
                player3.adddefRebound();
                mod.addElement("player3 " + " Def Rebound " +  player3.getdefRebound());
            }else if(flag4 == true){
                player4.adddefRebound();
                mod.addElement("player4 " + " Def Rebound " +  player4.getdefRebound());
            }else if(flag5 == true){
                player5.adddefRebound();
                mod.addElement("player5 " + " Def Rebound " +  player5.getdefRebound());
            }else if(flagOpp == true){
                playerOpp.adddefRebound();
                mod.addElement("Opponent " + " Def Rebound " +  playerOpp.getdefRebound());
            }
        }
    }//GEN-LAST:event_defReboundButtonActionPerformed

    private void assistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assistButtonActionPerformed
        displayList.setModel(mod);
        // Assists Actions and Logs
        if (RBSubtract.isSelected()){
            if (flag1 == true){
                player1.subAssist();
                mod.addElement("sub player1 " + " Assist " +  player1.getAssist());
            }else if(flag2 == true){
                player2.subAssist();
                mod.addElement("sub player2 " + " Assist " +  player2.getAssist());
            }else if(flag3 == true){
                player3.subAssist();
                mod.addElement("sub player3 " + " Assist " +  player3.getAssist());
            }else if(flag4 == true){
                player4.subAssist();
                mod.addElement("sub player4 " + " Assist " +  player4.getAssist());
            }else if(flag5 == true){
                player5.subAssist();
                mod.addElement("sub player5 " + " Assist " +  player5.getAssist());
            }else if(flagOpp == true){
                playerOpp.subAssist();
                mod.addElement("sub Opponent " + " Assist " +  playerOpp.getAssist());
            }
        }else{
            if (flag1 == true){
                player1.addAssist();
                mod.addElement("player1 " + " Assist " +  player1.getAssist());
            }else if(flag2 == true){
                player2.addAssist();
                mod.addElement("player2 " + " Assist " +  player2.getAssist());
            }else if(flag3 == true){
                player3.addAssist();
                mod.addElement("player3 " + " Assist " +  player3.getAssist());
            }else if(flag4 == true){
                player4.addAssist();
                mod.addElement("player4 " + " Assist " +  player4.getAssist());
            }else if(flag5 == true){
                player5.addAssist();
                mod.addElement("player5 " + " Assist " +  player5.getAssist());
            }else if(flagOpp == true){
                playerOpp.addAssist();
                mod.addElement("Opponent " + " Assist " +  playerOpp.getAssist());
            }
        }
    }//GEN-LAST:event_assistButtonActionPerformed

    private void turnoverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turnoverButtonActionPerformed
        displayList.setModel(mod);
        // Turnover Actions and Logs
        if (RBSubtract.isSelected()){
            if (flag1 == true){
                player1.subTurnover();
                mod.addElement("sub player1 " + " Turnover " +  player1.getTurnover());
            }else if(flag2 == true){
                player2.subTurnover();
                mod.addElement("sub player2 " + " Turnover " +  player2.getTurnover());
            }else if(flag3 == true){
                player3.subTurnover();
                mod.addElement("sub player3 " + " Turnover " +  player3.getTurnover());
            }else if(flag4 == true){
                player4.subTurnover();
                mod.addElement("sub player4 " + " Turnover " +  player4.getTurnover());
            }else if(flag5 == true){
                player5.subTurnover();
                mod.addElement("sub player5 " + " Turnover " +  player5.getTurnover());
            }else if(flagOpp == true){
                playerOpp.subTurnover();
                mod.addElement("sub Opponent " + " Turnover " +  playerOpp.getTurnover());
            }
        }else{
            if (flag1 == true){
                player1.addTurnover();
                mod.addElement("player1 " + " Turnover " +  player1.getTurnover());
            }else if(flag2 == true){
                player2.addTurnover();
                mod.addElement("player2 " + " Turnover " +  player2.getTurnover());
            }else if(flag3 == true){
                player3.addTurnover();
                mod.addElement("player3 " + " Turnover " +  player3.getTurnover());
            }else if(flag4 == true){
                player4.addTurnover();
                mod.addElement("player4 " + " Turnover " +  player4.getTurnover());
            }else if(flag5 == true){
                player5.addTurnover();
                mod.addElement("player5 " + " Turnover " +  player5.getTurnover());
            }else if(flagOpp == true){
                playerOpp.addTurnover();
                mod.addElement("Opponent " + " Turnover " +  playerOpp.getTurnover());
            }
        }
    }//GEN-LAST:event_turnoverButtonActionPerformed

    private void stealButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stealButtonActionPerformed
        displayList.setModel(mod);
        // Steal Actions and Logs
        if (RBSubtract.isSelected()){
            if (flag1 == true){
                player1.subSteal();
                mod.addElement("sub player1 " + " Steal " +  player1.getSteal());
            }else if(flag2 == true){
                player2.subSteal();
                mod.addElement("sub player2 " + " Steal " +  player2.getSteal());
            }else if(flag3 == true){
                player3.subSteal();
                mod.addElement("sub player3 " + " Steal " +  player3.getSteal());
            }else if(flag4 == true){
                player4.subSteal();
                mod.addElement("sub player4 " + " Steal " +  player4.getSteal());
            }else if(flag5 == true){
                player5.subSteal();
                mod.addElement("sub player5 " + " Steal " +  player5.getSteal());
            }else if(flagOpp == true){
                playerOpp.subSteal();
                mod.addElement("sub Opponent " + " Steal " +  playerOpp.getSteal());
            }
        }else{
            if (flag1 == true){
                player1.addSteal();
                mod.addElement("player1 " + " Steal " +  player1.getSteal());
            }else if(flag2 == true){
                player2.addSteal();
                mod.addElement("player2 " + " Steal " +  player2.getSteal());
            }else if(flag3 == true){
                player3.addSteal();
                mod.addElement("player3 " + " Steal " +  player3.getSteal());
            }else if(flag4 == true){
                player4.addSteal();
                mod.addElement("player4 " + " Steal " +  player4.getSteal());
            }else if(flag5 == true){
                player5.addSteal();
                mod.addElement("player5 " + " Steal " +  player5.getSteal());
            }else if(flagOpp == true){
                playerOpp.addSteal();
                mod.addElement("Opponent " + " Steal " +  playerOpp.getSteal());
            }
        }
    }//GEN-LAST:event_stealButtonActionPerformed

    private void blockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockButtonActionPerformed
        displayList.setModel(mod);
        // Block Actions and Logs
        if (RBSubtract.isSelected()){
            if (flag1 == true){
                player1.subBlock();
                mod.addElement("sub player1 " + " Block " +  player1.getBlock());
            }else if(flag2 == true){
                player2.subBlock();
                mod.addElement("sub player2 " + " Block " +  player2.getBlock());
            }else if(flag3 == true){
                player3.subBlock();
                mod.addElement("sub player3 " + " Block " +  player3.getBlock());
            }else if(flag4 == true){
                player4.subBlock();
                mod.addElement("sub player4 " + " Block " +  player4.getBlock());
            }else if(flag5 == true){
                player5.subBlock();
                mod.addElement("sub player5 " + " Block " +  player5.getBlock());
            }else if(flagOpp == true){
                playerOpp.subBlock();
                mod.addElement("sub Opponent " + " Block " +  playerOpp.getBlock());
            }
        }else{
            if (flag1 == true){
                player1.addBlock();
                mod.addElement("player1 " + " Block " +  player1.getBlock());
            }else if(flag2 == true){
                player2.addBlock();
                mod.addElement("player2 " + " Block " +  player2.getBlock());
            }else if(flag3 == true){
                player3.addBlock();
                mod.addElement("player3 " + " Block " +  player3.getBlock());
            }else if(flag4 == true){
                player4.addBlock();
                mod.addElement("player4 " + " Block " +  player4.getBlock());
            }else if(flag5 == true){
                player5.addBlock();
                mod.addElement("player5 " + " Block " +  player5.getBlock());
            }else if(flagOpp == true){
                playerOpp.addBlock();
                mod.addElement("Opponent " + " Block " +  playerOpp.getBlock());
            }
        }
    }//GEN-LAST:event_blockButtonActionPerformed

    private void menuNameEdit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNameEdit1ActionPerformed
        // Edit name of Player 1
        String newName = JOptionPane.showInputDialog(this, "Type in new name or number for " + player1.getName() + " :");
        player1.setName(newName);
        player1But.setText(player1.getName());
        menuNameEdit1.setText(newName);
    }//GEN-LAST:event_menuNameEdit1ActionPerformed

    private void menuNameEdit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNameEdit2ActionPerformed
        // Edit name of Player 2
        String newName = JOptionPane.showInputDialog(this, "Type in new name or number for " + player2.getName() + " :");
        player2.setName(newName);
        player2But.setText(player2.getName());
        menuNameEdit2.setText(newName);
    }//GEN-LAST:event_menuNameEdit2ActionPerformed

    private void menuNameEdit3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNameEdit3ActionPerformed
        // Edit name of Player 3
        String newName = JOptionPane.showInputDialog(this, "Type in new name or number for " + player3.getName() + " :");
        player3.setName(newName);
        player3But.setText(player3.getName());
        menuNameEdit3.setText(newName);
    }//GEN-LAST:event_menuNameEdit3ActionPerformed

    private void menuNameEdit4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNameEdit4ActionPerformed
        // Edit name of Player 4
        String newName = JOptionPane.showInputDialog(this, "Type in new name or number for " + player4.getName() + " :");
        player4.setName(newName);
        player4But.setText(player3.getName());
        menuNameEdit4.setText(newName);
    }//GEN-LAST:event_menuNameEdit4ActionPerformed

    private void menuNameEdit5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNameEdit5ActionPerformed
        // Edit name of Player 5
        String newName = JOptionPane.showInputDialog(this, "Type in new name or number for " + player5.getName() + " :");
        player5.setName(newName);
        player5But.setText(player5.getName());
        menuNameEdit5.setText(newName);
    }//GEN-LAST:event_menuNameEdit5ActionPerformed

    private void menuNameEditOppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNameEditOppActionPerformed
        // Edit name of Player Opp
        String newName = JOptionPane.showInputDialog(this, "Type in new name or number for " + playerOpp.getName() + " :");
        playerOpp.setName(newName);
        oppBut.setText(playerOpp.getName());
        menuNameEditOpp.setText(newName);
    }//GEN-LAST:event_menuNameEditOppActionPerformed

    private void foulButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foulButtonActionPerformed
        displayList.setModel(mod);
        // Foul Actions and Logs
        if (RBSubtract.isSelected()){
            if (flag1 == true){
                player1.subFoul();
                mod.addElement("sub player1 " + " Foul " +  player1.getFoul());
            }else if(flag2 == true){
                player2.subFoul();
                mod.addElement("sub player2 " + " Foul " +  player2.getFoul());
            }else if(flag3 == true){
                player3.subFoul();
                mod.addElement("sub player3 " + " Foul " +  player3.getFoul());
            }else if(flag4 == true){
                player4.subFoul();
                mod.addElement("sub player4 " + " Foul " +  player4.getFoul());
            }else if(flag5 == true){
                player5.subFoul();
                mod.addElement("sub player5 " + " Foul " +  player5.getFoul());
            }else if(flagOpp == true){
                playerOpp.subFoul();
                mod.addElement("sub Opponent " + " Foul " +  playerOpp.getFoul());
            }
        }else{
            if (flag1 == true){
                player1.addFoul();
                mod.addElement("player1 " + " Foul " +  player1.getFoul());
            }else if(flag2 == true){
                player2.addFoul();
                mod.addElement("player2 " + " Foul " +  player2.getFoul());
            }else if(flag3 == true){
                player3.addFoul();
                mod.addElement("player3 " + " Foul " +  player3.getFoul());
            }else if(flag4 == true){
                player4.addFoul();
                mod.addElement("player4 " + " Foul " +  player4.getFoul());
            }else if(flag5 == true){
                player5.addFoul();
                mod.addElement("player5 " + " Foul " +  player5.getFoul());
            }else if(flagOpp == true){
                playerOpp.addFoul();
                mod.addElement("Opponent " + " Foul " +  playerOpp.getFoul());
            }
        }
    }//GEN-LAST:event_foulButtonActionPerformed

    private void tableRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableRefreshButtonActionPerformed
        String[] columns = {"Name/Number", "2pt Att.", "2pt Made", "2pt %", "3pt Att.", "3pt Made", "3pt %", "FT Att.", "FT Made", "FT %",
            "Off Reb", "Def Reb", "Total Reb", "Steals", "Turnovers", "Assists", "Blocks"};
        String [][] data = {{String.valueOf(player1.getName()), String.valueOf(player1.gettwoAtt()), String.valueOf(player1.gettwoMake()),
        String.valueOf(player1.gettwoPerc()) + "%", String.valueOf(player1.getthreeAtt()), String.valueOf(player1.getthreeMake()), String.valueOf(player1.getthreePerc()) + "%",
        String.valueOf(player1.getftAtt()), String.valueOf(player1.getftMake()), String.valueOf(player1.getftPerc()) + "%", String.valueOf(player1.getoffRebound()),
        String.valueOf(player1.getdefRebound()), String.valueOf(player1.gettotalRebound()), String.valueOf(player1.getSteal()),
        String.valueOf(player1.getTurnover()), String.valueOf(player1.getAssist()), String.valueOf(player1.getBlock())}};
        
        DefaultTableModel model = (DefaultTableModel) statTable.getModel();
        model.setDataVector(data,columns);
    }//GEN-LAST:event_tableRefreshButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void resetFlags(){
        flag1 = false;
        flag2 = false;
        flag3 = false;
        flag4 = false;
        flag5 = false;
        flagOpp = false;
    }
    
    //Team Stats methods
    public int calculateteamScore(){
        teamScore = (player1.gettotalPoints() + player2.gettotalPoints() + player3.gettotalPoints() + player4.gettotalPoints() + player5.gettotalPoints());
        return teamScore;
    }
    public int calculateteamftMake(){
        teamftMake = (player1.getftMake() + player2.getftMake() + player3.getftMake() + player4.getftMake() + player5.getftMake());
        return teamftMake;
    }
    public int calculateteamftMiss(){
        teamftMiss = (player1.getftMiss() + player2.getftMiss() + player3.getftMiss() + player4.getftMiss() + player5.getftMiss());
        return teamftMiss;
    }
    public int calculateteamtwoMake(){
        teamtwoMake = (player1.gettwoMake() + player2.gettwoMake() + player3.gettwoMake() + player4.gettwoMake() + player5.gettwoMake());
        return teamtwoMake;
    }
    public int calculateteamtwoMiss(){
        teamtwoMiss = (player1.gettwoMiss() + player2.gettwoMiss() + player3.gettwoMiss() + player4.gettwoMiss() + player5.gettwoMiss());
        return teamtwoMiss;
    }
    public int calculateteamthreeMake(){
        teamthreeMake = (player1.getthreeMake() + player2.getthreeMake() + player3.getthreeMake() + player4.getthreeMake() + player5.getthreeMake());
        return teamthreeMake;
    }
    public int calculateteamthreeMiss(){
        teamthreeMiss = (player1.getthreeMiss() + player2.getthreeMiss() + player3.getthreeMiss() + player4.getthreeMiss() + player5.getthreeMiss());
        return teamthreeMiss;
    }
    public int calculateteamoffRebound(){
        teamoffRebound = (player1.getoffRebound() + player2.getoffRebound() + player3.getoffRebound() + player4.getoffRebound() + player5.getoffRebound());
        return teamoffRebound;
    }
    public int calculateteamdefRebound(){
        teamdefRebound = (player1.getdefRebound() + player2.getdefRebound() + player3.getdefRebound() + player4.getdefRebound() + player5.getdefRebound());
        return teamdefRebound;
    }
    public int calculateteamAssist(){
        teamAssist = (player1.getAssist() + player2.getAssist() + player3.getAssist() + player4.getAssist() + player5.getAssist());
        return teamAssist;
    }
    public int calculateteamTurnover(){
        teamTurnover = (player1.getTurnover() + player2.getTurnover() + player3.getTurnover() + player4.getTurnover() + player5.getTurnover());
        return teamTurnover;
    }
    public int calculateteamSteal(){
        teamSteal = (player1.getSteal() + player2.getSteal() + player3.getSteal() + player4.getSteal() + player5.getSteal());
        return teamSteal;
    }
    public int calculateteamBlock(){
        teamBlock = (player1.getBlock() + player2.getBlock() + player3.getBlock() + player4.getBlock() + player5.getBlock());
        return teamBlock;
    }
    public int calculateteamFoul(){
        teamFoul = (player1.getFoul() + player2.getFoul() + player3.getFoul() + player4.getFoul() + player5.getFoul());
        return teamBlock;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BballUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BballUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BballUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BballUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BballUI().setVisible(true);
            }
        });
        
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton RBSubtract;
    private javax.swing.JButton assistButton;
    private javax.swing.JButton blockButton;
    private javax.swing.JButton defReboundButton;
    private javax.swing.JList displayList;
    private javax.swing.JButton foulButton;
    private javax.swing.JButton ftMakeButton;
    private javax.swing.JButton ftMissButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenu menuEditNames;
    private javax.swing.JMenuItem menuNameEdit1;
    private javax.swing.JMenuItem menuNameEdit2;
    private javax.swing.JMenuItem menuNameEdit3;
    private javax.swing.JMenuItem menuNameEdit4;
    private javax.swing.JMenuItem menuNameEdit5;
    private javax.swing.JMenuItem menuNameEditOpp;
    private javax.swing.JButton offReboundButton;
    private javax.swing.JButton oppBut;
    private javax.swing.JButton player1But;
    private javax.swing.JButton player2But;
    private javax.swing.JButton player3But;
    private javax.swing.JButton player4But;
    private javax.swing.JButton player5But;
    private javax.swing.JTable statTable;
    private javax.swing.JButton stealButton;
    private javax.swing.JButton tableRefreshButton;
    private javax.swing.JButton threeMakeButton;
    private javax.swing.JButton threeMissButton;
    private javax.swing.JButton turnoverButton;
    private javax.swing.JButton twoMakeButton;
    private javax.swing.JButton twoMissButton;
    // End of variables declaration//GEN-END:variables

}
